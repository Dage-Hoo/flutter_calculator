// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.81.0.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import "bridge_definitions.dart";
import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';
import 'bridge_generated.dart';
export 'bridge_generated.dart';

class NativePlatform extends FlutterRustBridgeBase<NativeWire>
    with FlutterRustBridgeSetupMixin {
  NativePlatform(FutureOr<WasmModule> dylib) : super(NativeWire(dylib)) {
    setupMixinConstructor();
  }
  Future<void> setup() => inner.init;

// Section: api2wire

  @protected
  String api2wire_String(String raw) {
    return raw;
  }

  @protected
  List<dynamic> api2wire___record__expr_String((Expr, String) raw) {
    return [api2wire_expr(raw.$1), api2wire_String(raw.$2)];
  }

  @protected
  List<dynamic> api2wire___record__expr_type_String((ExprType, String) raw) {
    return [api2wire_expr_type(raw.$1), api2wire_String(raw.$2)];
  }

  @protected
  List<dynamic> api2wire_box_autoadd_data_struct(DataStruct raw) {
    return api2wire_data_struct(raw);
  }

  @protected
  List<dynamic> api2wire_data_struct(DataStruct raw) {
    return [
      api2wire_expr(raw.currentExpr),
      api2wire_list___record__expr_String(raw.historyExpr)
    ];
  }

  @protected
  List<dynamic> api2wire_expr(Expr raw) {
    return [
      api2wire_list___record__expr_type_String(raw.exprList),
      api2wire_i64(raw.lBracketCount),
      api2wire_i64(raw.rBracketCount)
    ];
  }

  @protected
  Object api2wire_i64(int raw) {
    return castNativeBigInt(raw);
  }

  @protected
  List<dynamic> api2wire_list___record__expr_String(List<(Expr, String)> raw) {
    return raw.map(api2wire___record__expr_String).toList();
  }

  @protected
  List<dynamic> api2wire_list___record__expr_type_String(
      List<(ExprType, String)> raw) {
    return raw.map(api2wire___record__expr_type_String).toList();
  }

  @protected
  Uint8List api2wire_uint_8_list(Uint8List raw) {
    return raw;
  }
// Section: finalizer
}

// Section: WASM wire module

@JS('wasm_bindgen')
external NativeWasmModule get wasmModule;

@JS()
@anonymous
class NativeWasmModule implements WasmModule {
  external Object /* Promise */ call([String? moduleName]);
  external NativeWasmModule bind(dynamic thisArg, String moduleName);
  external dynamic /* void */ wire_store_history(
      NativePortType port_, String path, List<dynamic> history);

  external dynamic /* void */ wire_get_histroy(
      NativePortType port_, String path);

  external dynamic /* String */ wire_dart_calculate(String input);
}

// Section: WASM wire connector

class NativeWire extends FlutterRustBridgeWasmWireBase<NativeWasmModule> {
  NativeWire(FutureOr<WasmModule> module)
      : super(WasmModule.cast<NativeWasmModule>(module));

  void wire_store_history(
          NativePortType port_, String path, List<dynamic> history) =>
      wasmModule.wire_store_history(port_, path, history);

  void wire_get_histroy(NativePortType port_, String path) =>
      wasmModule.wire_get_histroy(port_, path);

  dynamic /* String */ wire_dart_calculate(String input) =>
      wasmModule.wire_dart_calculate(input);
}
